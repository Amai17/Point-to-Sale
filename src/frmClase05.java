
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Amai
 */
public class frmClase05 extends javax.swing.JDialog {

    //decalro variable de conexion
    connection oConn = new connection();
    String strCveActual;
    /**
     * Creates new form Clase05
     */
    public frmClase05(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //centra la forma
        this.setLocationRelativeTo(null);
        //longuitudes de captura
        
        //Carga el Listbox con los procesos
        SubProcesosCarga();
        
    }
  

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProcesos = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProcesos = new javax.swing.JList<>();
        txtIde = new javax.swing.JTextField();
        txtNom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlProcesos.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesos"));
        pnlProcesos.setToolTipText("Procesos del Sistema");
        pnlProcesos.setName("Procesos del Sistema"); // NOI18N

        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        lstProcesos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lstProcesos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstProcesos.setToolTipText("Proceso del Sistema");
        lstProcesos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstProcesosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lstProcesosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(lstProcesos);

        txtIde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdeKeyPressed(evt);
            }
        });

        txtNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlProcesosLayout = new javax.swing.GroupLayout(pnlProcesos);
        pnlProcesos.setLayout(pnlProcesosLayout);
        pnlProcesosLayout.setHorizontalGroup(
            pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProcesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProcesosLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addGap(53, 53, 53))
                    .addGroup(pnlProcesosLayout.createSequentialGroup()
                        .addGroup(pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlProcesosLayout.createSequentialGroup()
                                .addComponent(txtIde, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(txtNom)
                                .addGap(22, 22, 22)))
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
        pnlProcesosLayout.setVerticalGroup(
            pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProcesosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnAgregar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtIde.setText(" ");
        txtNom.setText(" ");
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void lstProcesosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProcesosMouseClicked
        // TODO add your handling code here:
       
        //Variable para obtener el indice
        int iSeleccionado;
        iSeleccionado=lstProcesos.getSelectedIndex();
        
        //verifica si realmete selecciono
        if(iSeleccionado>=0){
            
            //Colaca los datos eleccionados en el texbox
            txtIde.setText(lstProcesos.getSelectedValue().toString().substring(0,10));
            txtNom.setText(lstProcesos.getSelectedValue().toString().substring(11));
            
            //Guardar clave actual
            strCveActual=txtIde.getText();
        }
    }//GEN-LAST:event_lstProcesosMouseClicked

    private void lstProcesosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProcesosMousePressed
        // TODO add your handling code here:
        // Declaro variable para obtener el seleccionado
    int iSeleccionado;
    String strIde;
    String strNom;
    String strSqlStmt;
    
    // Pregunto en el Parametro
    if (evt.getClickCount()==2)
    {
         
         // Obtiene el Elemento Seleccionado
         iSeleccionado=lstProcesos.getSelectedIndex();
         if (iSeleccionado>=0)
            {
            // Coloca el dato seleccionado en los text box
            strIde=lstProcesos.getSelectedValue().toString().substring(0,10);
            strNom=lstProcesos.getSelectedValue().toString().substring(11);

            // Prepara el Query para elimianr
            strSqlStmt =  " Delete from tblProcesos ";
            strSqlStmt += " Where strProcesoIde='"+strIde+"' ";
            strSqlStmt += " And   strProcesoNom='"+strNom+"' ";
            // Ejecuta el Update
            oConn.FnBoolQueryExecuteUpdate(strSqlStmt);
            
            //Carga los Procesos
            SubProcesosCarga();
            }
        }
    }//GEN-LAST:event_lstProcesosMousePressed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        
        //declaraos variable para la funcion sql
        String strSqlStmt;
        
        if (FnBoolValidaDatos()){
            
            //Prepara el Query
            strSqlStmt = " Insert into tblprocesos (strProcesoIde,strProcesoNom) ";
            strSqlStmt +=" Values ('"+txtIde.getText()+"','"+txtNom.getText()+"' ) ";
            
            //Ejecut el Query
            oConn.FnBoolQueryExecuteUpdate(strSqlStmt);
            
            //Carga los procesos de Nueva Cuenta
            SubProcesosCarga();
        }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        // TODO add your handling code here:
        //Dclaro variables para el sql
        String strSqlStmt;
        
        //Valida los atos correctos
        if(FnBoolValidaDatos()){
            
            //Prepara el query
            strSqlStmt = " Update tblProcesos ";
            strSqlStmt += " Set strProcesoIde='"+txtIde.getText()+"', ";
            strSqlStmt += "     strProcesoNom='"+txtNom.getText()+"', ";
            strSqlStmt += " Where strProcesoIde='"+strCveActual+"', ";
             
            //Ejecuta el Query
            oConn.FnBoolQueryExecuteUpdate(strSqlStmt);
            
            //CARGA LOS PROCESOS EN LA  nueva cuenta
            SubProcesosCarga();
            
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void txtIdeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdeKeyPressed
        // TODO add your handling code here:
         if (txtIde.getText().length()>9)
    {
        // Lo consume
        evt.consume();
        
        // Reestringe a 10
        txtIde.setText(txtIde.getText().substring(0, 9));
    }
    }//GEN-LAST:event_txtIdeKeyPressed

    private void txtNomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomKeyPressed
        // TODO add your handling code here:
        if (txtNom.getText().length()>29)
    {
        // Lo consume
        evt.consume();
        
        // Reestringe a 10
        txtNom.setText(txtNom.getText().substring(0, 29));
    }
    }//GEN-LAST:event_txtNomKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmClase05.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmClase05.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmClase05.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmClase05.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmClase05 dialog = new frmClase05(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
     private void SubProcesosCarga(){
        //Para instruccion sql
        String sqlStmt;
        String sIdeProceso;
        String sNomProceso;
        
        //variables para agregar un elementos a la lista
        DefaultListModel itemLista;
        itemLista = new DefaultListModel();
        
        //limpiar el control
        lstProcesos.removeAll();
        
        //prepara la variable para el query
        sqlStmt = "Select * from tblprocesos";
        
        if(oConn.FnBoolQueryExecute(sqlStmt)){
            try{
                //verifica resultados
                while (oConn.setResult.next()){
                
                    //Obtiene los datos de la consulta
       sIdeProceso = oConn.setResult.getString("strProcesoIde");
       sNomProceso = oConn.setResult.getString("strProcesoNom");
       //agrega el dato a la lista
       itemLista.addElement(sIdeProceso+"-"+sNomProceso);      
            }
                //asgregar el dato a la lista
                lstProcesos.setModel(itemLista);
                
                //Cierra los resultados
                oConn.setResult.close();
            }
            catch(SQLException ex){
              JOptionPane.showMessageDialog(rootPane,ex);
              Logger.getLogger(frmClase05.class.getName()).log(Level.SEVERE,null,ex);
            }
        }
        
    }

     private boolean FnBoolValidaDatos() {
        //To change body of generated methods, choose Tools | Templates.
        //Variable para el mensaje
        String strMensaje="";
        
        //Valida el ide
        if(txtIde.getText().length()==0 || txtIde.getText().length()!= 10){
            strMensaje = "El ide debe de ser de 10 caracteres:";
            txtIde.requestFocus();
        }
        //Valida el Nombre
        if(txtNom.getText().length()==0){
            if (strMensaje.length()==0)
                txtNom.requestFocus();
                
            strMensaje = strMensaje + "\n"+"El proceso debe ser de mas  de 0 Caracteres:";
    }
        //Valida si faltaron datos
        if (strMensaje.length()>0){
            
    //Construye el mensaje
    strMensaje ="Debe capturar los siguentes datos:\n"+strMensaje;
    
    //Muestra el mensaje
    JOptionPane.showMessageDialog(this, strMensaje);
    
    //Retorna:
    return false;        
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstProcesos;
    private javax.swing.JPanel pnlProcesos;
    private javax.swing.JTextField txtIde;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables

    
}
