
import java.awt.Frame;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.Image;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Amai
 */
public class frmClase04b extends javax.swing.JFrame {
    
    Globales   oGlobal = new Globales();
    connection oConn = new connection();
    //declaro variable de conexion
   
    /**
     * Creates new form frmClase04b
     */
    public frmClase04b() {
        initComponents();
        // Maximiza la forma
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        //Carga la Imagen del Icono
        Image icon = new ImageIcon(getClass().getResource("hules.png")).getImage();
        // Coloca la Imagen; no es necesario this
        this.setIconImage(icon);
        // Habilita Opciones de acuerdo al Role
        sbSubHabilitaOpciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        opcSistemaProcesos = new javax.swing.JMenuItem();
        opcUsuarios = new javax.swing.JMenuItem();
        opcParametros = new javax.swing.JMenuItem();
        opcSalida = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        opcProductos = new javax.swing.JMenuItem();
        opcProcesos = new javax.swing.JMenu();
        opcInventario = new javax.swing.JMenuItem();
        opcVentas = new javax.swing.JMenuItem();
        opcReportes = new javax.swing.JMenu();
        ReporteProcesos = new javax.swing.JMenuItem();
        ReporteUsuarios = new javax.swing.JMenuItem();
        VentasPago = new javax.swing.JMenuItem();
        Ventas = new javax.swing.JMenuItem();
        Bitacora = new javax.swing.JMenuItem();
        opcUtileria = new javax.swing.JMenu();
        RespRest = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        jMenu7.setText("File");
        jMenuBar4.add(jMenu7);

        jMenu8.setText("Edit");
        jMenuBar4.add(jMenu8);

        jMenu9.setText("File");
        jMenuBar5.add(jMenu9);

        jMenu10.setText("Edit");
        jMenuBar5.add(jMenu10);

        jMenuItem2.setText("jMenuItem2");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Sistema");

        opcSistemaProcesos.setText("Procesos");
        opcSistemaProcesos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                opcProcesosMouse(evt);
            }
        });
        jMenu1.add(opcSistemaProcesos);

        opcUsuarios.setText("Usuarios");
        opcUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                opcUsuariosMousePressed(evt);
            }
        });
        jMenu1.add(opcUsuarios);

        opcParametros.setText("Parametros");
        jMenu1.add(opcParametros);

        opcSalida.setText("Salida");
        opcSalida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                opcSalirMousePresed(evt);
            }
        });
        opcSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcSalidaActionPerformed(evt);
            }
        });
        jMenu1.add(opcSalida);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Catalogos");

        opcProductos.setText("Productos");
        opcProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                opcProductosMousePressed(evt);
            }
        });
        opcProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcProductosActionPerformed(evt);
            }
        });
        jMenu2.add(opcProductos);

        jMenuBar1.add(jMenu2);

        opcProcesos.setText("Procesos");

        opcInventario.setText("Inventario");
        opcInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcInventarioActionPerformed(evt);
            }
        });
        opcProcesos.add(opcInventario);

        opcVentas.setText("Ventas");
        opcVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcVentasActionPerformed(evt);
            }
        });
        opcProcesos.add(opcVentas);

        jMenuBar1.add(opcProcesos);

        opcReportes.setText("Reportes");

        ReporteProcesos.setText("Procesos");
        ReporteProcesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteProcesosActionPerformed(evt);
            }
        });
        opcReportes.add(ReporteProcesos);

        ReporteUsuarios.setText("Usuarios");
        ReporteUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteUsuariosActionPerformed(evt);
            }
        });
        opcReportes.add(ReporteUsuarios);

        VentasPago.setText("Ventas por Forma de Pago");
        VentasPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VentasPagoActionPerformed(evt);
            }
        });
        opcReportes.add(VentasPago);

        Ventas.setText("Ventas");
        Ventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VentasActionPerformed(evt);
            }
        });
        opcReportes.add(Ventas);

        Bitacora.setText("Bitacora");
        Bitacora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BitacoraActionPerformed(evt);
            }
        });
        opcReportes.add(Bitacora);

        jMenuBar1.add(opcReportes);

        opcUtileria.setText("Utileria");

        RespRest.setText("Respaldar - Restaurar");
        RespRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RespRestActionPerformed(evt);
            }
        });
        opcUtileria.add(RespRest);

        jMenuBar1.add(opcUtileria);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     private void sbSubHabilitaOpciones() {
       // Habilita Deshablita opciones
        opcProcesos.setEnabled(fnBoolIsOptionEnabled("sis-pro-01"));
        opcUsuarios.setEnabled(fnBoolIsOptionEnabled("sis-usu-01"));
        opcParametros.setEnabled(fnBoolIsOptionEnabled("sis-par-01"));
        opcProductos.setEnabled(fnBoolIsOptionEnabled("cat-pro-01"));
        opcInventario.setEnabled(fnBoolIsOptionEnabled("pro-inv-01"));
        opcVentas.setEnabled(fnBoolIsOptionEnabled("pro-inv-02"));        
        ReporteUsuarios.setEnabled(fnBoolIsOptionEnabled("rep-usu-01"));
        ReporteProcesos.setEnabled(fnBoolIsOptionEnabled("rep-pro-01"));
        VentasPago.setEnabled(fnBoolIsOptionEnabled("rep-vta-01"));        
        Ventas.setEnabled(fnBoolIsOptionEnabled("rep-vta-02"));
        Bitacora.setEnabled(fnBoolIsOptionEnabled("rep-bit-01"));
        RespRest.setEnabled(fnBoolIsOptionEnabled("uti-res-01"));
    }
      // Habilita Opciones
    private boolean fnBoolIsOptionEnabled(String sOption){
        String sStmt;
        boolean bResult=false;
        // Consulta para Verificar Acceso a Sistema-Procesos
        sStmt = " Select * from tblrolprocesos";
        sStmt+= " Where strRoleName='"+Globales.sRole+"'";
        sStmt+= " And   strProcesoIde='"+sOption+"'";
        
        // Ejecuto el Query
        oConn.FnBoolQueryExecute(sStmt);
        try {
            // Verifico que haya habido resultados
            if (oConn.setResult.next())        
               bResult=true;
        
            // Cierra la Consulta
            oConn.setResult.close();    
        } catch (SQLException ex) {
            Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        // Retorna el Resultado
        return bResult;
        
    }
    private void opcSalirMousePresed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcSalirMousePresed
        // TODO add your handling code here:

        //mensaje de que no logra la conexioncontacto
        int iResult;
        iResult =JOptionPane.showConfirmDialog(null, "Desea salir del sistema?", "Confirme salida", JOptionPane.YES_NO_OPTION);
        if (iResult == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_opcSalirMousePresed

    private void opcSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcSalidaActionPerformed

    private void opcProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcProductosActionPerformed
        // TODO add your handling code here:
         frmClase07b frmProductos = new frmClase07b(this,true);
        //muestra la forma
        frmProductos.setVisible(true);
    }//GEN-LAST:event_opcProductosActionPerformed

    private void opcInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcInventarioActionPerformed
        // TODO add your handling code here:
         if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Ingreso Proceso de Inventarios");
         frmClase08 frmProductos = new frmClase08(this,true);
        //muestra la forma
        frmProductos.setVisible(true);
    }//GEN-LAST:event_opcInventarioActionPerformed

    private void opcProcesosMouse(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcProcesosMouse
        // TODO add your handling code here:
         if (oGlobal.fnBoolBitacoraActiva())
       oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Ingreso Sistema Procesos");
        //declara la variable de la forma de procesos
        frmClase05 frmProcesos = new frmClase05(this,true);
        //muestra la forma
        frmProcesos.setVisible(true);
    }//GEN-LAST:event_opcProcesosMouse

    private void opcUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcUsuariosMousePressed
        // TODO add your handling code here:
         if (oGlobal.fnBoolBitacoraActiva())
       oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Ingreso Sistema Usuarios");

    // Declaro la Variable de la Forma de Usuarios
    frmClase06 frmUsuarios = new frmClase06(this,true);
    
    // Muestra la Forma
    frmUsuarios.setVisible(true);
    }//GEN-LAST:event_opcUsuariosMousePressed

    private void opcProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcProductosMousePressed
        // TODO add your handling code here:
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Ingreso Catálogo de Productos");

        // Declaro la Variable de la Forma de Procesos
        frmClase071 frmProductos = new frmClase071(this, true);

        // Muestra la Forma
        frmProductos.setVisible(true);
    }//GEN-LAST:event_opcProductosMousePressed

    private void opcVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcVentasActionPerformed
        // TODO add your handling code here:
         if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Ingreso Proceso de Inventarios");
         // Declaro la Variable de la Forma de Procesos
        frmClase09 frmVentas = new frmClase09(null,true);

        // Muestra la Forma
        frmVentas.setVisible(true);
    }//GEN-LAST:event_opcVentasActionPerformed

    private void ReporteProcesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteProcesosActionPerformed
        // TODO add your handling code here:
         if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Reporte de Procesos");

       try 
       {
            // Carga el archivo jasper al objeto JasperReport
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile("rptProcesos.jasper");
            
            
            // Genera el reporte usando el objeto JasperReport e indicando la conexion
            JasperPrint myPrint = JasperFillManager.fillReport(myReport,null,connection.oConnection);
            //JasperPrint myPrint = JasperFillManager.fillReport(myReport, null,new JREmptyDataSource());
            
            // Visualiza el Reporte
            JasperViewer.viewReport(myPrint,false);
            
        } catch (JRException ex) {
            Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ReporteProcesosActionPerformed

    private void ReporteUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteUsuariosActionPerformed
        // TODO add your handling code here:
         // Verifica bitácora activa
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Reporte de Usuarios");

        
        try 
        {
            // Carga el archivo jasper al objeto JasperReport
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile("rptUsuarios.jasper");
            //JasperPrint myPrint = JasperFillManager.fillReport(myReport, null,new JREmptyDataSource());
            
            // Genera el reporte usando el objeto JasperReport e indicando la conexion
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, null,connection.oConnection);
            
            // Visualiza el Reporte
            JasperViewer.viewReport(myPrint,false);
            
        } catch (JRException ex) {
            Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
        try 
        {
                JasperReport myReport = JasperCompileManager.compileReport("rptUsuarios.jrxml");
                //JasperPrint myPrint = JasperFillManager.fillReport(myReport,null,new JREmptyDataSource());
                JasperPrint myPrint = JasperFillManager.fillReport(myReport,null,connection.oConnection);
                JasperViewer.viewReport(myPrint,false);
                
        } catch (JRException ex) {
                //oFunc.SubSistemaMensaje(ex.getMessage());
                Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ReporteUsuariosActionPerformed

    private void VentasPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VentasPagoActionPerformed
        // TODO add your handling code here:
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Reporte de Ventas por Forma de Pago");
    
        // Declaro la Variable de la Forma de Procesos
        frmClase11 frmReporteXFormasDePago = new frmClase11(null,true);

        // Muestra la Forma
        frmReporteXFormasDePago.setVisible(true);
        
        // Verifica que no haya cancelado
        if (! Globales.sFecha1.equals(""))
        {
                //Pasamos parametros al reporte Jasper. 
                Map parameters = new HashMap(); 

                // Coloco los valores en los parámetros
                parameters.put("Fecha1",Globales.sFecha1);             
                parameters.put("Fecha2",Globales.sFecha2); 

               try 
                {
                    // Carga el archivo jasper al objeto JasperReport
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile("reporteVtaFormaPago.jasper");


                    // Genera el reporte usando el objeto JasperReport e indicando la conexion
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport,parameters,connection.oConnection);
                    //JasperPrint myPrint = JasperFillManager.fillReport(myReport, null,new JREmptyDataSource());

                    // Visualiza el Reporte
                    JasperViewer.viewReport(myPrint,false);

                } catch (JRException ex) {
                    Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_VentasPagoActionPerformed

    private void VentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VentasActionPerformed
        // TODO add your handling code here:
         // Verifica bitácora activa
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Reporte de Ventas");

        // Declaro la Variable de la Forma de Procesos
        frmClase11 frmReporteVentas = new frmClase11(null,true);

        // Muestra la Forma
        frmReporteVentas.setTitle("Reporte de Ventas");
        frmReporteVentas.setVisible(true);
        
        // Verifica que no haya cancelado
        if (! Globales.sFecha1.equals(""))
        {
                //Pasamos parametros al reporte Jasper. 
                Map parameters = new HashMap(); 

                // Coloco los valores en los parámetros
                parameters.put("Fecha1",Globales.sFecha1);             
                parameters.put("Fecha2",Globales.sFecha2); 

                try 
                {
                    // Carga el archivo jasper al objeto JasperReport
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile("rptVentas2.jasper");


                    // Genera el reporte usando el objeto JasperReport e indicando la conexion
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport,parameters,connection.oConnection);
                    //JasperPrint myPrint = JasperFillManager.fillReport(myReport, null,new JREmptyDataSource());

                    // Visualiza el Reporte
                    JasperViewer.viewReport(myPrint,false);

                } catch (JRException ex) {
                    Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
                }
        }

    }//GEN-LAST:event_VentasActionPerformed

    private void BitacoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BitacoraActionPerformed
        // TODO add your handling code here:
         // Verifica bitácora activa
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Reporte de Bitácora");

        String sQuery;
        
        // Declaro la Variable de la Forma de Procesos
        frmClase15 frmReporteBitacora = new frmClase15(null,true);

        // Muestra la Forma
        frmReporteBitacora.setTitle("Reporte de Bitacora");
        frmReporteBitacora.setVisible(true);
        
        // Verifica que no haya cancelado
        if (! Globales.sUsuario.equals(""))
        {
                //Pasamos parametros al reporte Jasper. 
                Map parameters = new HashMap(); 
                
                // Construye el Query dependiendo de lo seleccionado
                if (Globales.sUsuario.equals("All"))
                {
                    // Construyo el Query
                    sQuery = "Select strUserIde, dateBitacoraFechaHora, strBitacoraDescripcion from 11tblbitacora";
                    
                    // Coloco el query como parametro sin filtro
                    //parameters.put("sQuery",sQuery);               
                }
                else
                {
                    // Construyo el Query con filtro de usuario
                    sQuery = "Select strUserIde, dateBitacoraFechaHora, strBitacoraDescripcion from 11tblbitacora";
                    sQuery = sQuery + " Where strUserIde='"+Globales.sUsuario+"'";               
                }   
                
                // Construyo el query con el filtro del Usuario
                parameters.put("sQuery",sQuery); 

               try 
                {
                    // Carga el archivo jasper al objeto JasperReport
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile("rptBitacora.jasper");
                    // Genera el reporte usando el objeto JasperReport e indicando la conexion
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport,parameters,connection.oConnection);

                    // Visualiza el Reporte
                    JasperViewer.viewReport(myPrint,false);

                } catch (JRException ex) {
                    Logger.getLogger(frmClase04b.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_BitacoraActionPerformed

    private void RespRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RespRestActionPerformed
        // TODO add your handling code here:
        // Verifica bitácora activa
        if (oGlobal.fnBoolBitacoraActiva())
           oGlobal.sbGrabaBitacora(Globales.sSystemUser, "Utilería Respaldar - Restaurar");

        // Declaro la Variable de la Forma de Procesos
        frmClase13 frmRespRest = new frmClase13(null,true);

        // Muestra la Forma
        frmRespRest.setTitle("Respaldar - Restaurar Información");
        frmRespRest.setVisible(true);
    }//GEN-LAST:event_RespRestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmClase04b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmClase04b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmClase04b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmClase04b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmClase04b().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Bitacora;
    private javax.swing.JMenuItem ReporteProcesos;
    private javax.swing.JMenuItem ReporteUsuarios;
    private javax.swing.JMenuItem RespRest;
    private javax.swing.JMenuItem Ventas;
    private javax.swing.JMenuItem VentasPago;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem opcInventario;
    private javax.swing.JMenuItem opcParametros;
    private javax.swing.JMenu opcProcesos;
    private javax.swing.JMenuItem opcProductos;
    private javax.swing.JMenu opcReportes;
    private javax.swing.JMenuItem opcSalida;
    private javax.swing.JMenuItem opcSistemaProcesos;
    private javax.swing.JMenuItem opcUsuarios;
    private javax.swing.JMenu opcUtileria;
    private javax.swing.JMenuItem opcVentas;
    // End of variables declaration//GEN-END:variables

    
}
